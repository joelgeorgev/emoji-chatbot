{"version":3,"sources":["moji-translate/index.js","assets/github.svg","components/message-stream.js","components/compose-message.js","components/message-box.js","actions/index.js","constants/ActionTypes.js","containers/chat-window-container.js","components/chat-window.js","reducers/messages.js","reducers/index.js","sagas/saga.js","App.js","registerServiceWorker.js","index.js"],"names":["emojilib","require","SYMBOLS","allEmoji","lib","isMaybeAlreadyAnEmoji","word","match","join","getAllEmojiForWord","originalWord","trim","toLowerCase","maybeSingular","length","slice","maybePlural","maybeVerbedSimple","maybeVerbedVowel","maybeVerbedDoubled","indexOf","verb","substr","useful","push","emoji","words","keywords","char","category","getEmojiForWord","translations","Math","floor","random","module","exports","translateForDisplay","node","document","createElement","firstSymbol","lastSymbol","innerHTML","i","option","textContent","appendChild","translate","sentence","onlyEmoji","translation","split","translated","__webpack_require__","p","MessageStream","_ref","messages","ref","useRef","useEffect","element","current","maxScrollTop","scrollHeight","clientHeight","scrollTop","react_default","a","className","map","message","index","message_box_MessageBox","key","ComposeMessage","onSendMessage","_useState","useState","_useState2","Object","slicedToArray","setMessage","type","placeholder","value","onChange","e","target","onKeyPress","composedMessage","MessageBox","styleClass","author","position","theme","concat","saveMessage","payload","ChatWindowContainer","connect","state","dispatch","sendMessage","message_stream_MessageStream","compose_message_ComposeMessage","initialState","rootReducer","combineReducers","arguments","undefined","action","_action$payload","toConsumableArray","processMessage","regenerator_default","wrap","_context","prev","next","put","stop","_marked","saga","mark","_context2","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","es","href","src","github","alt","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.150db95e.chunk.js","sourcesContent":["const emojilib = require('emojilib');\nconst SYMBOLS = '!\"#$%&\\'()*+,-./:;<=>?@[]^_`{|}~';\nconst allEmoji = emojilib.lib;\n\n/**\n * Returns true for something that's already an emoji like 🤖.\n * @param {String} word The word to be translated\n * @returns {Bool}\n */\nfunction isMaybeAlreadyAnEmoji(word) {\n  let ranges = [\n      '\\ud83c[\\udf00-\\udfff]', // U+1F300 to U+1F3FF\n      '\\ud83d[\\udc00-\\ude4f]', // U+1F400 to U+1F64F\n      '\\ud83d[\\ude80-\\udeff]' // U+1F680 to U+1F6FF\n  ];\n  return word.match(ranges.join('|')) !== null;\n}\n\n/**\n * Returns the list of all emoji translations of an english word.\n * @param {String} word The word to be translated\n * @returns {Array} The list of emoji translations or '' if none exist.\n */\nfunction getAllEmojiForWord(originalWord) {\n  let word = originalWord.trim().toLowerCase();\n\n  if (!word || word === '' || word === 'a' || word === 'it' || word === 'is')\n    return '';\n\n  // Maybe this is a plural word but the word is the singular?\n  // Don't do it for two letter words since \"as\" would become \"a\" etc.\n  let maybeSingular = '';\n  if (word.length > 2 && word[word.length - 1] === 's') {\n    maybeSingular = word.slice(0, word.length - 1);\n  }\n\n  // Maybe this is a singular word but the word is the plural?\n  // Don't do this for single letter since that will pluralize crazy things.\n  let maybePlural = (word.length === 1) ? '' : word + 's';\n\n  let maybeVerbedSimple = '';\n  let maybeVerbedVowel = '';\n  let maybeVerbedDoubled  = '';\n\n  if (word.indexOf('ing') !== -1) {\n    let verb = word.substr(0, word.length - 3);\n    // eating -> eat\n    maybeVerbedSimple = verb;\n    // dancing -> dance\n    maybeVerbedVowel = verb + 'e';\n    // running -> run\n    maybeVerbedDoubled = verb.substr(0, verb.length - 1);\n  }\n\n  // Go through all the things and find the first one that matches.\n  let useful = [];\n\n  // If this is already an emoji, don't try to translate it.\n  if (isMaybeAlreadyAnEmoji(word)) {\n    useful.push(word);\n    return useful;\n  }\n\n  // If it's \"i\" or \"i\", add some faces to it.\n  if (word === 'i' || word === 'you') {\n    useful.push('😀');\n    useful.push('😊');\n  } else if (word === 'she'){\n    useful.push('💁');\n  } else if (word === 'he'){\n    useful.push('💁‍♂️');\n  } else if (word === 'we' || word === 'they') {\n    useful.push('👩‍👩‍👦‍👦');\n  } else if (word === 'am' || word === 'is' || word === 'are') {\n    useful.push('👉');\n  } else if (word === 'thanks') {\n    useful.push('🙌');\n  }\n\n  for (let emoji in allEmoji) {\n    let words = allEmoji[emoji].keywords;\n    // TODO: omg refactor this one day, please. Why is this even. Why.\n    if (word === allEmoji[emoji].char ||\n        emoji === word || (emoji === word + '_face') ||\n        emoji === maybeSingular || emoji === maybePlural ||\n        emoji === maybeVerbedSimple || emoji === maybeVerbedVowel || emoji === maybeVerbedDoubled ||\n        (words && words.indexOf(word) >= 0) ||\n        (words && words.indexOf(maybeSingular) >= 0) ||\n        (words && words.indexOf(maybePlural) >= 0) ||\n        (words && words.indexOf(maybeVerbedSimple) >= 0) ||\n        (words && words.indexOf(maybeVerbedVowel) >= 0) ||\n        (words && words.indexOf(maybeVerbedDoubled) >= 0)) {\n      // If it's a two letter word that got translated to a flag, it's 99% of the\n      // time incorrect, so stop doing that.\n      if (!(word.length <= 3 && allEmoji[emoji].category === 'flags')) {\n        useful.push(allEmoji[emoji].char);\n      }\n    }\n  }\n  return (useful.length === 0) ? '' : useful;\n}\n\n/**\n * Returns a random emoji translation of an english word.\n * @param {String} word The word to be translated.\n * @returns {String} A random emoji translation or '' if none exists.\n */\nfunction getEmojiForWord(word) {\n  let translations = getAllEmojiForWord(word);\n  return translations[Math.floor(Math.random() * translations.length)];\n}\n\n/**\n * Returns a displayable, possibly translated english word to emoji.\n * This will either be:\n *  - a span containing the word if it cannot be translated\n *  - a span containing an emoji if only one translation exists\n *  - a span containing a <select> with all the translations if multiple exist\n * @param {String} word The word to be translated\n * @returns {HTMLElement} A <span> or <select> element as above.\n */\nfunction translateForDisplay(word) {\n  var node = document.createElement('span');\n\n  // Punctuation blows. Get all the punctuation at the start and end of the word.\n  let firstSymbol = '';\n  let lastSymbol = '';\n\n  while (SYMBOLS.indexOf(word[0]) !== -1) {\n    firstSymbol += word[0];\n    word = word.slice(1, word.length);\n  }\n  while (SYMBOLS.indexOf(word[word.length - 1]) !== -1) {\n    lastSymbol += word[word.length - 1];\n    word = word.slice(0, word.length - 1);\n  }\n\n  // If it's already an emoji, return it.\n  var emoji = getAllEmojiForWord(word);\n  if (emoji === '')\n    emoji = [word];\n\n  if (emoji.length === 1) {\n    node = document.createElement('span');\n    node.innerHTML = firstSymbol + emoji + lastSymbol + ' ';\n  } else {\n    node = document.createElement('select');\n    for (var i = 0; i < emoji.length; i++) {\n      var option = document.createElement('option');\n      option.textContent = firstSymbol + emoji[i] + lastSymbol + ' ';\n      node.appendChild(option);\n    }\n  }\n  return node;\n}\n\n/**\n * Translates an entire sentence to emoji. If multiple translations exist\n * for a particular word, a random emoji is picked.\n * @param {String} sentence The sentence to be translated\n * @param {Bool} onlyEmoji True if the translation should omit all untranslatable words\n * @returns {String} An emoji translation!\n */\nfunction translate(sentence, onlyEmoji) {\n  let translation = '';\n  let words = sentence.split(' ');\n  for (let i = 0; i < words.length; i++ ) {\n    // Punctuation blows. Get all the punctuation at the start and end of the word.\n    // TODO: stop copy pasting this.\n    let firstSymbol = '';\n    let lastSymbol = '';\n    var word = words[i];\n\n    while (SYMBOLS.indexOf(word[0]) !== -1) {\n      firstSymbol += word[0];\n      word = word.slice(1, word.length);\n    }\n    while (SYMBOLS.indexOf(word[word.length - 1]) !== -1) {\n      lastSymbol += word[word.length - 1];\n      word = word.slice(0, word.length - 1);\n    }\n\n    if (onlyEmoji) {\n      firstSymbol = lastSymbol = ''\n    }\n\n    let translated = getEmojiForWord(word);\n    if (translated) {\n      translation += firstSymbol + translated + lastSymbol + ' ';\n    } else if (!onlyEmoji){\n      translation += firstSymbol + word + lastSymbol +  ' '\n    }\n  }\n  return translation;\n}\n\nmodule.exports.isMaybeAlreadyAnEmoji = isMaybeAlreadyAnEmoji;\nmodule.exports.getAllEmojiForWord = getAllEmojiForWord;\nmodule.exports.getEmojiForWord = getEmojiForWord;\nmodule.exports.translateForDisplay = translateForDisplay;\nmodule.exports.translate = translate;\n","module.exports = __webpack_public_path__ + \"static/media/github.dc6635a4.svg\";","import React, { useEffect, useRef } from 'react'\n\nimport { MessageBox } from '.'\n\nexport const MessageStream = ({ messages }) => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    const { current: element } = ref\n    const { scrollHeight, clientHeight } = element\n    const maxScrollTop = scrollHeight - clientHeight\n    element.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0\n  })\n\n  return (\n    <div className='ba br2 pa2 overflow-auto' ref={ref}>\n      <div className='flex flex-column ma2 min-h24'>\n        {messages.map((message, index) => {\n          return <MessageBox key={index} message={message} />\n        })}\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react'\n\nexport const ComposeMessage = ({ onSendMessage }) => {\n  const [message, setMessage] = useState('')\n\n  const handleChange = (e) => {\n    setMessage(e.target.value)\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      const composedMessage = message.trim()\n      if (composedMessage) {\n        onSendMessage(composedMessage)\n        setMessage('')\n      }\n    }\n  }\n\n  return (\n    <div className='self-center ma4'>\n      <input\n        type='text'\n        placeholder='Write a message'\n        value={message}\n        className='ba b--light-silver pa2'\n        onChange={handleChange}\n        onKeyPress={handleKeyPress} />\n    </div>\n  )\n}","import React from 'react'\n\nexport const MessageBox = ({ message }) => {\n  const styleClass = message.author === 'You' ?\n    {\n      position: 'justify-end',\n      theme: 'bg-gray white'\n    }\n    :\n    {\n      position: 'justify-start',\n      theme: 'bg-light-gray'\n    }\n\n  return (\n    <div className={`flex ${styleClass.position}`}>\n      <div className={`br2 ma1 pa2 ${styleClass.theme}`}>{message.message}</div>\n    </div>\n  )\n}","import { SEND_MESSAGE, SAVE_MESSAGE } from '../constants/ActionTypes'\n\n// UI actions\nexport const sendMessage = (message) => { return { type: SEND_MESSAGE, message } }\n\n// Saga actions\nexport const saveMessage = (payload) => { return { type: SAVE_MESSAGE, payload } }","// UI actions\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\n\n// Saga actions\nexport const SAVE_MESSAGE = 'SAVE_MESSAGE'","import { connect } from 'react-redux'\n\nimport { ChatWindow } from '../components'\nimport { sendMessage } from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.messages\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSendMessage: (message) => {\n      dispatch(sendMessage(message))\n    }\n  }\n}\n\nexport const ChatWindowContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatWindow)","import React from 'react'\n\nimport { MessageStream, ComposeMessage } from '.'\n\nexport const ChatWindow = ({ messages, onSendMessage }) => {\n  return (\n    <div className='flex flex-column pa2 w5'>\n      <MessageStream messages={messages} />\n      <ComposeMessage onSendMessage={onSendMessage} />\n    </div>\n  )\n}","import { SAVE_MESSAGE } from '../constants/ActionTypes'\n\nexport const initialState = [{\n  author: 'Bot',\n  message: 'Write a message and see it translated to emojis!'\n}]\n\nexport const messages = (state = initialState, action) => {\n  switch (action.type) {\n    case SAVE_MESSAGE:\n      const { author, message } = action.payload\n      return [...state, { author, message }]\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\n\nimport { messages } from './messages'\n\nexport const rootReducer = combineReducers({ messages })","import { takeEvery, put } from 'redux-saga/effects'\n\nimport translate from '../moji-translate'\nimport { saveMessage } from '../actions'\nimport { SEND_MESSAGE } from '../constants/ActionTypes'\n\nfunction* processMessage(action) {\n  yield put(saveMessage({ author: 'You', message: action.message }))\n  yield put(saveMessage({ author: 'Bot', message: translate.translate(action.message) }))\n}\n\nexport const saga = function* () {\n  yield takeEvery(SEND_MESSAGE, processMessage)\n}","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport 'tachyons/css/tachyons.min.css'\n\nimport { ChatWindowContainer } from './containers'\nimport { rootReducer } from './reducers'\nimport { saga } from './sagas'\nimport github from './assets/github.svg'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(saga)\n\nexport const App = () => {\n  return (\n    <div className='flex flex-column w-80 mw8 vh-100 center pv4'>\n      <div className='flex flex-auto flex-column self-center'>\n        <Provider store={store}>\n          <ChatWindowContainer />\n        </Provider>\n      </div>\n      <div className='self-center'>\n        <a href='https://github.com/joelgeorgev/emoji-chatbot'>\n          <img src={github} alt='GitHub' />\n        </a>\n      </div>\n    </div>\n  )\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()"],"sourceRoot":""}