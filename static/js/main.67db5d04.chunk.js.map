{"version":3,"sources":["moji-translate/index.js","assets/github.svg","fonts/source-sans-pro-v11-latin-regular.woff2","fonts/source-sans-pro-v11-latin-regular.woff","components/ChatWindow/ChatWindow.js","actions/index.js","reducers/messages.js","reducers/index.js","components/ChatWindow/ChatWindow.connected.js","utils/scrollToElement.js","components/MessageStream/MessageStream.js","components/ComposeMessage/ComposeMessage.js","components/MessageBox/MessageBox.js","sagas/translateMessage.js","sagas/index.js","App.js","registerServiceWorker.js","index.js"],"names":["emojilib","require","SYMBOLS","allEmoji","lib","isMaybeAlreadyAnEmoji","word","match","join","getAllEmojiForWord","originalWord","trim","toLowerCase","maybeSingular","length","slice","maybePlural","maybeVerbedSimple","maybeVerbedVowel","maybeVerbedDoubled","indexOf","verb","substr","useful","push","emoji","words","keywords","char","category","getEmojiForWord","translations","Math","floor","random","module","exports","translateForDisplay","node","document","createElement","firstSymbol","lastSymbol","innerHTML","i","option","textContent","appendChild","translate","sentence","onlyEmoji","translation","split","translated","Wrapper","styled","div","messageTranslated","text","type","payload","initialState","author","rootReducer","combineReducers","messages","state","getMessages","ConnectedChatWindow","connect","selectors","dispatch","handleSendMessage","message","onSendMessage","scrollToElement","selector","index","options","querySelectorAll","scrollIntoView","MessageStream","scrollToNode","useEffect","behavior","map","key","Input","input","ComposeMessage","useState","setMessage","placeholder","aria-label","value","onChange","e","target","onKeyPress","composedMessage","isBot","Message","MessageBox","className","translateMessage","put","rootSaga","all","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Section","section","Footer","App","role","href","src","github","alt","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","GlobalStyle","createGlobalStyle","woff2","woff","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.67db5d04.chunk.js","sourcesContent":["const emojilib = require('emojilib');\nconst SYMBOLS = '!\"#$%&\\'()*+,-./:;<=>?@[]^_`{|}~';\nconst allEmoji = emojilib.lib;\n\n/**\n * Returns true for something that's already an emoji like 🤖.\n * @param {String} word The word to be translated\n * @returns {Bool}\n */\nfunction isMaybeAlreadyAnEmoji(word) {\n  let ranges = [\n      '\\ud83c[\\udf00-\\udfff]', // U+1F300 to U+1F3FF\n      '\\ud83d[\\udc00-\\ude4f]', // U+1F400 to U+1F64F\n      '\\ud83d[\\ude80-\\udeff]' // U+1F680 to U+1F6FF\n  ];\n  return word.match(ranges.join('|')) !== null;\n}\n\n/**\n * Returns the list of all emoji translations of an english word.\n * @param {String} word The word to be translated\n * @returns {Array} The list of emoji translations or '' if none exist.\n */\nfunction getAllEmojiForWord(originalWord) {\n  let word = originalWord.trim().toLowerCase();\n\n  if (!word || word === '' || word === 'a' || word === 'it' || word === 'is')\n    return '';\n\n  // Maybe this is a plural word but the word is the singular?\n  // Don't do it for two letter words since \"as\" would become \"a\" etc.\n  let maybeSingular = '';\n  if (word.length > 2 && word[word.length - 1] === 's') {\n    maybeSingular = word.slice(0, word.length - 1);\n  }\n\n  // Maybe this is a singular word but the word is the plural?\n  // Don't do this for single letter since that will pluralize crazy things.\n  let maybePlural = (word.length === 1) ? '' : word + 's';\n\n  let maybeVerbedSimple = '';\n  let maybeVerbedVowel = '';\n  let maybeVerbedDoubled  = '';\n\n  if (word.indexOf('ing') !== -1) {\n    let verb = word.substr(0, word.length - 3);\n    // eating -> eat\n    maybeVerbedSimple = verb;\n    // dancing -> dance\n    maybeVerbedVowel = verb + 'e';\n    // running -> run\n    maybeVerbedDoubled = verb.substr(0, verb.length - 1);\n  }\n\n  // Go through all the things and find the first one that matches.\n  let useful = [];\n\n  // If this is already an emoji, don't try to translate it.\n  if (isMaybeAlreadyAnEmoji(word)) {\n    useful.push(word);\n    return useful;\n  }\n\n  // If it's \"i\" or \"i\", add some faces to it.\n  if (word === 'i' || word === 'you') {\n    useful.push('😀');\n    useful.push('😊');\n  } else if (word === 'she'){\n    useful.push('💁');\n  } else if (word === 'he'){\n    useful.push('💁‍♂️');\n  } else if (word === 'we' || word === 'they') {\n    useful.push('👩‍👩‍👦‍👦');\n  } else if (word === 'am' || word === 'is' || word === 'are') {\n    useful.push('👉');\n  } else if (word === 'thanks') {\n    useful.push('🙌');\n  }\n\n  for (let emoji in allEmoji) {\n    let words = allEmoji[emoji].keywords;\n    // TODO: omg refactor this one day, please. Why is this even. Why.\n    if (word === allEmoji[emoji].char ||\n        emoji === word || (emoji === word + '_face') ||\n        emoji === maybeSingular || emoji === maybePlural ||\n        emoji === maybeVerbedSimple || emoji === maybeVerbedVowel || emoji === maybeVerbedDoubled ||\n        (words && words.indexOf(word) >= 0) ||\n        (words && words.indexOf(maybeSingular) >= 0) ||\n        (words && words.indexOf(maybePlural) >= 0) ||\n        (words && words.indexOf(maybeVerbedSimple) >= 0) ||\n        (words && words.indexOf(maybeVerbedVowel) >= 0) ||\n        (words && words.indexOf(maybeVerbedDoubled) >= 0)) {\n      // If it's a two letter word that got translated to a flag, it's 99% of the\n      // time incorrect, so stop doing that.\n      if (!(word.length <= 3 && allEmoji[emoji].category === 'flags')) {\n        useful.push(allEmoji[emoji].char);\n      }\n    }\n  }\n  return (useful.length === 0) ? '' : useful;\n}\n\n/**\n * Returns a random emoji translation of an english word.\n * @param {String} word The word to be translated.\n * @returns {String} A random emoji translation or '' if none exists.\n */\nfunction getEmojiForWord(word) {\n  let translations = getAllEmojiForWord(word);\n  return translations[Math.floor(Math.random() * translations.length)];\n}\n\n/**\n * Returns a displayable, possibly translated english word to emoji.\n * This will either be:\n *  - a span containing the word if it cannot be translated\n *  - a span containing an emoji if only one translation exists\n *  - a span containing a <select> with all the translations if multiple exist\n * @param {String} word The word to be translated\n * @returns {HTMLElement} A <span> or <select> element as above.\n */\nfunction translateForDisplay(word) {\n  var node = document.createElement('span');\n\n  // Punctuation blows. Get all the punctuation at the start and end of the word.\n  let firstSymbol = '';\n  let lastSymbol = '';\n\n  while (SYMBOLS.indexOf(word[0]) !== -1) {\n    firstSymbol += word[0];\n    word = word.slice(1, word.length);\n  }\n  while (SYMBOLS.indexOf(word[word.length - 1]) !== -1) {\n    lastSymbol += word[word.length - 1];\n    word = word.slice(0, word.length - 1);\n  }\n\n  // If it's already an emoji, return it.\n  var emoji = getAllEmojiForWord(word);\n  if (emoji === '')\n    emoji = [word];\n\n  if (emoji.length === 1) {\n    node = document.createElement('span');\n    node.innerHTML = firstSymbol + emoji + lastSymbol + ' ';\n  } else {\n    node = document.createElement('select');\n    for (var i = 0; i < emoji.length; i++) {\n      var option = document.createElement('option');\n      option.textContent = firstSymbol + emoji[i] + lastSymbol + ' ';\n      node.appendChild(option);\n    }\n  }\n  return node;\n}\n\n/**\n * Translates an entire sentence to emoji. If multiple translations exist\n * for a particular word, a random emoji is picked.\n * @param {String} sentence The sentence to be translated\n * @param {Bool} onlyEmoji True if the translation should omit all untranslatable words\n * @returns {String} An emoji translation!\n */\nfunction translate(sentence, onlyEmoji) {\n  let translation = '';\n  let words = sentence.split(' ');\n  for (let i = 0; i < words.length; i++ ) {\n    // Punctuation blows. Get all the punctuation at the start and end of the word.\n    // TODO: stop copy pasting this.\n    let firstSymbol = '';\n    let lastSymbol = '';\n    var word = words[i];\n\n    while (SYMBOLS.indexOf(word[0]) !== -1) {\n      firstSymbol += word[0];\n      word = word.slice(1, word.length);\n    }\n    while (SYMBOLS.indexOf(word[word.length - 1]) !== -1) {\n      lastSymbol += word[word.length - 1];\n      word = word.slice(0, word.length - 1);\n    }\n\n    if (onlyEmoji) {\n      firstSymbol = lastSymbol = ''\n    }\n\n    let translated = getEmojiForWord(word);\n    if (translated) {\n      translation += firstSymbol + translated + lastSymbol + ' ';\n    } else if (!onlyEmoji){\n      translation += firstSymbol + word + lastSymbol +  ' '\n    }\n  }\n  return translation;\n}\n\nmodule.exports.isMaybeAlreadyAnEmoji = isMaybeAlreadyAnEmoji;\nmodule.exports.getAllEmojiForWord = getAllEmojiForWord;\nmodule.exports.getEmojiForWord = getEmojiForWord;\nmodule.exports.translateForDisplay = translateForDisplay;\nmodule.exports.translate = translate;\n","module.exports = __webpack_public_path__ + \"static/media/github.dc6635a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/source-sans-pro-v11-latin-regular.76d8cbb0.woff2\";","module.exports = __webpack_public_path__ + \"static/media/source-sans-pro-v11-latin-regular.f94f84eb.woff\";","import React from 'react'\nimport styled from 'styled-components'\n\nimport { MessageStream, ComposeMessage } from '..'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 16rem;\n`\n\nexport const ChatWindow = ({ messages, handleSendMessage }) => (\n  <Wrapper>\n    <MessageStream messages={messages} />\n    <ComposeMessage onSendMessage={handleSendMessage} />\n  </Wrapper>\n)\n","export const SEND_MESSAGE = 'SEND_MESSAGE'\nexport const MESSAGE_TRANSLATED = 'MESSAGE_TRANSLATED'\n\nexport const sendMessage = (text) => ({\n  type: SEND_MESSAGE,\n  payload: { text }\n})\n\nexport const messageTranslated = (text) => ({\n  type: MESSAGE_TRANSLATED,\n  payload: { text }\n})\n","import { SEND_MESSAGE, MESSAGE_TRANSLATED } from '../actions'\n\nconst initialState = [\n  {\n    author: 'Bot',\n    text: 'Write a message and see it translated to emojis!'\n  }\n]\n\nexport const messages = (\n  state = initialState,\n  { type, payload: { text } = {} }\n) => {\n  switch (type) {\n    case SEND_MESSAGE:\n      return [...state, { author: 'You', text }]\n    case MESSAGE_TRANSLATED:\n      return [...state, { author: 'Bot', text }]\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport { messages } from './messages'\n\nexport const rootReducer = combineReducers({ messages })\n\n// Selectors\nexport const getMessages = (state) => state.messages\n","import { connect } from 'react-redux'\n\nimport { ChatWindow } from '.'\nimport { sendMessage } from '../../actions'\nimport * as selectors from '../../reducers'\n\nconst mapStateToProps = (state) => ({\n  messages: selectors.getMessages(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleSendMessage: (message) => dispatch(sendMessage(message))\n})\n\nexport const ConnectedChatWindow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatWindow)\n","export const scrollToElement = (selector, index, options) => {\n  const node = document.querySelectorAll(selector)[index]\n  if (node) {\n    node.scrollIntoView(options)\n  }\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport { MessageBox } from '..'\nimport { scrollToElement } from '../../utils'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 20rem;\n  height: 20rem;\n  border: 1px solid;\n  border-radius: 0.25rem;\n  padding: 1rem;\n  overflow: auto;\n`\n\nexport const MessageStream = ({ messages, scrollToNode = scrollToElement }) => {\n  useEffect(() => {\n    if (messages.length) {\n      scrollToNode('.message', messages.length - 1, { behavior: 'smooth' })\n    }\n  })\n\n  return (\n    <Wrapper>\n      {messages.map((message, index) => (\n        <MessageBox key={index} message={message} />\n      ))}\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  margin-top: 2rem;\n`\n\nconst Input = styled.input`\n  border: 1px solid #aaa;\n  padding: 0.5rem;\n`\n\nexport const ComposeMessage = ({ onSendMessage }) => {\n  const [message, setMessage] = useState('')\n\n  const handleChange = (e) => setMessage(e.target.value)\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      const composedMessage = message.trim()\n      if (composedMessage) {\n        onSendMessage(composedMessage)\n        setMessage('')\n      }\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Input\n        type='text'\n        placeholder='Write a message'\n        aria-label='Write a message'\n        value={message}\n        onChange={handleChange}\n        onKeyPress={handleKeyPress}\n      />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  ${({ isBot }) =>\n    isBot &&\n    `\n      justify-content: flex-start;\n    `}\n`\n\nconst Message = styled.div`\n  margin: 0.25rem;\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  color: #fff;\n  background-color: #777;\n  ${({ isBot }) =>\n    isBot &&\n    `\n      color: #000;\n      background-color: #eee;\n    `}\n`\n\nexport const MessageBox = ({ message }) => {\n  const { author, text } = message\n  const isBot = author === 'Bot'\n\n  return (\n    <Wrapper isBot={isBot}>\n      <Message isBot={isBot} className='message'>\n        {text}\n      </Message>\n    </Wrapper>\n  )\n}\n","import { put } from 'redux-saga/effects'\n\nimport translate from '../moji-translate'\nimport { messageTranslated } from '../actions'\n\nexport const translateMessage = function* ({ payload: { text } }) {\n  yield put(messageTranslated(translate.translate(text)))\n}\n","import { all, takeEvery } from 'redux-saga/effects'\n\nimport { SEND_MESSAGE } from '../actions'\nimport { translateMessage } from './translateMessage'\n\nexport const rootSaga = function* () {\n  yield all([takeEvery(SEND_MESSAGE, translateMessage)])\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport styled from 'styled-components'\n\nimport { ConnectedChatWindow } from './components'\nimport { rootReducer } from './reducers'\nimport { rootSaga } from './sagas'\nimport github from './assets/github.svg'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootSaga)\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  max-width: 64rem;\n  height: 100vh;\n  margin: 0 auto;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-top: 2rem;\n  overflow: auto;\n`\n\nconst Footer = styled.div`\n  margin: 2rem;\n`\n\nexport const App = () => (\n  <main role='main'>\n    <Section>\n      <Wrapper>\n        <Provider store={store}>\n          <ConnectedChatWindow />\n        </Provider>\n      </Wrapper>\n      <Footer>\n        <a href='https://github.com/joelgeorgev/emoji-chatbot'>\n          <img src={github} alt='GitHub' />\n        </a>\n      </Footer>\n    </Section>\n  </main>\n)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createGlobalStyle } from 'styled-components'\n\nimport { App } from './App'\nimport woff2 from './fonts/source-sans-pro-v11-latin-regular.woff2'\nimport woff from './fonts/source-sans-pro-v11-latin-regular.woff'\nimport registerServiceWorker from './registerServiceWorker'\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Source Sans Pro', sans-serif;\n    overscroll-behavior-y: none;\n  }\n\n  /* source-sans-pro-regular - latin */\n  @font-face {\n    font-family: 'Source Sans Pro';\n    font-style: normal;\n    font-weight: 400;\n    font-display: optional;\n    src: local('Source Sans Pro Regular'), local('SourceSansPro-Regular'),\n        url(${woff2}) format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n        url(${woff}) format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n  }\n`\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}